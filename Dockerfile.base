# Set environment variables
# ENV DEBIAN_FRONTEND=noninteractive

# Default versions for tools (can be overridden with --build-arg)
ARG DOCKER_VERSION="27.2.1"
ARG NEOVIM_VERSION="0.10.1"
ARG LAZYGIT_VERSION="0.44.0"
ARG NODE_VERSION="22.8.0" # Used to install DEVCONTAINER-CLI
ARG K9S_VERSION="0.32.7"

# DOCKER
# ====================
FROM docker:${DOCKER_VERSION}-dind as docker-builder

# DEVCONTAINER-CLI
# ====================
FROM node:${NODE_VERSION} as devcontainercli-builder
RUN npm install -g @devcontainers/cli

# BASE IMAGE
# ====================
FROM ubuntu:24.04

# Must be defined in every SCOPE that uses them
ARG DOCKER_VERSION
ARG NEOVIM_VERSION
ARG LAZYGIT_VERSION
ARG K9S_VERSION

# Install essential tools, Docker CLI, and other dependencies
RUN apt-get update && apt-get install -y \
    sudo \
    curl \
    wget \
    git \
    gcc \
    bash \
    tmux \
    unzip \
    net-tools \
    iputils-ping \
    busybox \
    ripgrep \
    fzf \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy Docker CLI and Docker Compose plugin from docker:dind image
COPY --from=docker-builder /usr/local/bin/docker /usr/local/bin/docker
COPY --from=docker-builder /usr/local/libexec/docker/cli-plugins /usr/local/libexec/docker/cli-plugins

# Create a symlink for docker-compose
RUN ln -s /usr/local/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose

# Install LazyGit from GitHub
RUN curl -Lo lazygit.tar.gz https://github.com/jesseduffield/lazygit/releases/download/v${LAZYGIT_VERSION}/lazygit_${LAZYGIT_VERSION}_Linux_x86_64.tar.gz \
    && tar xf lazygit.tar.gz lazygit \
    && mv lazygit /usr/local/bin/ \
    && rm lazygit.tar.gz

# Install Neovim from GitHub
RUN curl -Lo nvim.appimage https://github.com/neovim/neovim/releases/download/v${NEOVIM_VERSION}/nvim.appimage \
    && chmod +x nvim.appimage \
    && ./nvim.appimage --appimage-extract \
    && mv squashfs-root /usr/local/nvim \
    && ln -s /usr/local/nvim/AppRun /usr/local/bin/nvim \
    && rm -f nvim.appimage

# Install kubectl
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" \
    && chmod +x kubectl \
    && mv kubectl /usr/local/bin/

# Install kubectx and kubens
RUN git clone https://github.com/ahmetb/kubectx /opt/kubectx \
    && ln -s /opt/kubectx/kubectx /usr/local/bin/kubectx \
    && ln -s /opt/kubectx/kubens /usr/local/bin/kubens

# Install helm
RUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 \
    && chmod 700 get_helm.sh \
    && ./get_helm.sh \
    && rm -rf get_helm.sh

# Install K9S
RUN wget https://github.com/derailed/k9s/releases/download/v${K9S_VERSION}/k9s_linux_amd64.deb \
    && apt install ./k9s_linux_amd64.deb \
    && rm k9s_linux_amd64.deb

# Copy devcontainer-cli binaries
COPY --from=devcontainercli-builder /usr/local/bin/node /usr/local/bin/node
COPY --from=devcontainercli-builder /usr/local/lib/node_modules/@devcontainers /usr/local/lib/devcontainer
RUN ln -s /usr/local/lib/devcontainer/cli/devcontainer.js /usr/local/bin/devcontainer

